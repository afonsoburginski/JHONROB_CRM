generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  name     String
  username String
  email    String
}

model Client {
  id        Int        @id @default(autoincrement())
  name      String
  email     String
  phone     String
  address   String
  city      String
  state     String
  zip       String
}

model Group {
  id        Int        @id @default(autoincrement())
  title     String
  products  Product[]
}

model Product {
  id         Int       @id @default(autoincrement())
  title      String
  groupId    Int
  group      Group     @relation(fields: [groupId], references: [id])
  models     Model[]
  types      Type[]
}

model Model {
  id           Int        @id @default(autoincrement())
  title        String
  productId    Int
  product      Product   @relation(fields: [productId], references: [id])
  capacities   Capacity[]
}

model Type {
  id           Int        @id @default(autoincrement())
  title        String
  productId    Int
  product      Product   @relation(fields: [productId], references: [id])
}


model Capacity {
  id         Int      @id @default(autoincrement())
  title      String
  modelId    Int
  model      Model    @relation(fields: [modelId], references: [id])
  heights    Height[]
}

model Height {
  id         Int       @id @default(autoincrement())
  title      String
  recommended Boolean
  capacityId Int
  capacity   Capacity @relation(fields: [capacityId], references: [id])
  powers     Power[]
}

model Power {
  id          Int      @id @default(autoincrement())
  title       String
  recommended Boolean
  heightId    Int
  height      Height  @relation(fields: [heightId], references: [id])
}

model InputOutput {
  id        Int      @id @default(autoincrement())
  input     String
  output    String
}

model Propose {
  id            Int            @id @default(autoincrement())
  title         String
  content       String
  createdAt     DateTime       @default(now())
  observation   String?
  groups        String
  inputOutputs  String
  equipment     String         @default("")
  product       String         @default("")
  model         String         @default("")
  capacity      String         @default("")
  height        String         @default("")
  power         String         @default("")
  input         String         @default("")
  output        String         @default("")
}